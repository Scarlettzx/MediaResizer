apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven-publish'
final group = "com.github.Scarlettzx"
final artifact = "awesomelib"
final versionCode = 1
final versionName = "1.0"
// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = group
                artifactId = artifact
                version = versionName
            }

            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = group + ".debug"
                artifactId = artifact + "-debug"
                version = versionName
            }
        }
    }
}
android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    api 'com.github.ypresto:android-transcoder:v0.2.0'
    api 'com.github.WindSekirun:RichUtilsKt:2.0.6'
}

dokka {
    moduleName = 'MediaResizer'
    outputFormat = 'html'
    outputDirectory = "$projectDir/docs"
    sourceDirs = files('src/main/java')
    skipEmptyPackages = true
    linkMapping {
        dir = "src/main/java"
        url = "https://github.com/WindSekirun/MediaResizer/tree/master/Resizer/src/main/java"
        suffix = "#L"
    }
}